<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:TSFCS.UI">

    <!--  ImageButton  -->
    <Style TargetType="{x:Type local:ImageButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    <Grid x:Name="ImageButtonGrid">
                        <Border 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            Visibility="{Binding BorderVisibility, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <StackPanel 
                            Orientation="Vertical" VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <Image x:Name="ButtonImage"
                                   Source="{Binding NormalImagePath,RelativeSource={RelativeSource TemplatedParent}}"
                                   Height="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Width="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}"
                                   ToolTip="{TemplateBinding ToolTip}"/>
                            <ContentPresenter HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" 
                                    VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ButtonImage" Property="Source" Value="{Binding HoverImagePath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ButtonImage" Property="Source" Value="{Binding PressImagePath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ButtonImage" Property="Source" Value="{Binding DisableImagePath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ImageTextButton  -->
    <Style TargetType="{x:Type local:ImageTextButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageTextButton}">
                    <Grid Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <Image Name="ButtonTwoImage" Source="{Binding NormalImagePath,RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ButtonTwoImage" Property="Source" Value="{Binding HoverImagePath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ButtonTwoImage" Property="Source" Value="{Binding PressImagePath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TabItemButton  -->
    <Style TargetType="{x:Type local:TabItemButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TabItemButton}" >
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="TabItemButton_storyboard">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#F1F5F8"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator x:Name="TabItemButton_bullet" Background="Transparent">
                        <Border x:Name="bd" Background="White" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle  Grid.Column="1"
                                    Height="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}" 
                                    Width="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}"
                                    VerticalAlignment="Center" HorizontalAlignment="Center"
                                    ToolTip="{TemplateBinding ToolTip}">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{Binding ImagePath, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ContentPresenter Grid.Column="2"  HorizontalAlignment="Center"  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                            </Grid>
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="bd" Property="Background" Value="gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="bd" Property="Background" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="bd" Property="Background" Value="#FF31C27C" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource TabItemButton_storyboard}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bd" Property="Background" Value="Red" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TopTabItem  -->
    <Style TargetType="{x:Type local:TopTabItem}">
        <Setter Property="Width" Value="120" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Foreground" Value="#FF888888" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TopTabItem}">
                    <Grid Background="Transparent">
                        <Border
                            x:Name="x"
                            BorderBrush="#FFE5E5E5"
                            BorderThickness="1,1,0,1"
                            CornerRadius="5,0,0,5">
                            <TextBlock
                                x:Name="Content"
                                Margin="5,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="{TemplateBinding Header}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="x" Property="Background" Value="#FFF5F5F7"/>
                        </Trigger>
                        <Trigger Property="TabItemType" Value="Right">
                            <Setter TargetName="x" Property="BorderThickness" Value="1"/>
                            <Setter TargetName="x" Property="CornerRadius" Value="0,5,5,0"/>
                        </Trigger>
                        <Trigger Property="TabItemType" Value="Middle">
                            <Setter TargetName="x" Property="BorderThickness" Value="1,1,0,1"/>
                            <Setter TargetName="x" Property="CornerRadius" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="x" Property="BorderThickness" Value="0"/>
                            <Setter TargetName="Content" Property="Foreground" Value="{Binding SelectForeground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="x" Property="Background" Value="{Binding SelectedColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter Margin="0" Content="{TemplateBinding Content}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  FlatButton  -->
    <Style TargetType="{x:Type local:FlatButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#FFC9C9C9"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FlatButton}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        UseLayoutRounding="True">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFBCDDEE"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FFBCDDEE"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FFF5F5F7"/>
                            <Setter TargetName="border" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FFE7E7E7"/>
                            <Setter TargetName="border" Property="Opacity" Value="1"/>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  NumericBox  -->
    <Style TargetType="{x:Type local:NumericBox}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NumericBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                        <local:FlatButton
                            x:Name="BtnReduce"
                            Background="#F5F7FA"
                            BorderBrush="#D4D7DE"
                            CornerRadius="2,0,0,2">
                            <Path
                                Width="10"
                                Height="1"
                                HorizontalAlignment="Center"
                                Data="M802.909091 488.727273h-558.545455a34.909091 34.909091 0 1 0 0 69.818182h558.545455a34.909091 34.909091 0 1 0 0-69.818182"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Fill"
                                UseLayoutRounding="True" />
                        </local:FlatButton>
                        <Border
                            Grid.Column="1"
                            BorderBrush="#D4D7DE"
                            BorderThickness="0,1,0,1">
                            <Label
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Value}"/>
                        </Border>
                        <local:FlatButton
                            x:Name="BtnAdd"
                            Grid.Column="2"
                            Background="#F5F7FA"
                            BorderBrush="#D4D7DE"
                            CornerRadius="0,2,2,0">
                            <Path
                                Width="10"
                                Height="10"
                                HorizontalAlignment="Center"
                                Data="M779.184225 523.498892 244.815775 523.498892c-12.397355 0-22.429849-10.042727-22.429849-22.429849s10.032494-22.429849 22.429849-22.429849l534.36845 0c12.397355 0 22.429849 10.042727 22.429849 22.429849S791.58158 523.498892 779.184225 523.498892zM512 790.682094c-12.397355 0-22.429849-10.042727-22.429849-22.429849L489.570151 233.884818c0-12.387122 10.031471-22.429849 22.429849-22.429849 12.397355 0 22.429849 10.042727 22.429849 22.429849l0 534.36845C534.429849 780.639367 524.397355 790.682094 512 790.682094z"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Fill"
                                UseLayoutRounding="True" />
                        </local:FlatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  WaterMarkTextBox  -->
    <Style TargetType="{x:Type local:WaterMarkTextBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#DCDFE6"/>
        <Setter Property="Background" Value="#00FFFFFF"/>
        <Setter Property="Foreground" Value="#FF3F3F3F"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WaterMarkTextBox}">
                    <Border
                        x:Name="border"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        SnapsToDevicePixels="True">
                        <Grid Background="#00FFFFFF">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="icon" Visibility="Collapsed">
                                <Path
                                    Width="{TemplateBinding IconWidth}"
                                    Height="{TemplateBinding IconHeight}"
                                    Margin="10,0,10,0"
                                    HorizontalAlignment="Center"
                                    Data="{TemplateBinding Icon}"
                                    Fill="{TemplateBinding Foreground}"
                                    Stretch="Fill"
                                    UseLayoutRounding="True"/>
                            </Border>
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden"/>
                            <TextBlock
                                x:Name="watermark"
                                Grid.Column="1"
                                Margin="3,0,0,0.5"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="#FF888888"
                                IsHitTestVisible="False"
                                Text="{TemplateBinding Hint}"
                                Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="watermark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ShowIcon" Value="true">
                            <Setter TargetName="icon" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding SelectedColor, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter Property="Foreground" Value="{Binding SelectedColor, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>